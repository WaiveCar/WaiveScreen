#!/usr/bin/python3
import lib.lib as lib
import arduino.lib as arduino
import sys
import json
import os
import logging

DEBUG = 'DEBUG' in os.environ

FORMAT = '%(asctime)-15s %(message)s'
logging.basicConfig(format=FORMAT, level=logging.DEBUG)
logger = logging.getLogger(__name__)
arduino.set_log(logger)

if len(sys.argv) > 1:
  fn = sys.argv[1]
  try:
    res = eval("lib.{}()".format(fn))
  except:
    try:
      res = eval("arduino.{}()".format(fn))
    except Exception as ex:
      logging.warning("Failed to execute {}: {}".format(fn, ex))
      res = False

  if res and not callable(res):
    print(json.dumps(res))

else:
  print("I need an argument")
  [print(" {}".format(x)) for x in sorted(list(set(dir(lib)) - set(dir())))]
  sys.exit(-1)
