#!/usr/bin/python3
import lib.lib as lib
import lib.db as db
import lib.arduino as arduino
import sys
import time
import re
import json
import os
import logging
import sys

DEBUG = os.environ.get('DEBUG')

FORMAT = '%(asctime)-15s %(message)s'
logging.basicConfig(format=FORMAT, level=logging.DEBUG if DEBUG else logging.INFO, stream=sys.stderr)
logger = logging.getLogger(__name__)
arduino.set_log(logger)

_last = False
_succ = False
_attemptList = []

def tryit(fn):
  global _attemptList, _last, _succ
  row = [fn]

  try:
    res = eval(fn)
    row.append(fn)
    _last = res
    _succ = True

  except Exception as ex:
    row.append(ex)

  _attemptList.append(row)
  return _succ

def dumpfailure():
  for row in _attemptList:
    logging.warning("{:32}- {}".format(row[0], row[1]))


if len(sys.argv) > 1:
  fn = sys.argv[1]
  arg = ''

  arg_new_list = []
  if fn == '_raw':
    print(eval(sys.argv[2]))
    sys.exit(0)

  elif len(sys.argv) > 2:
    arg_raw_list = sys.argv[2].split(',')

    for arg_raw in arg_raw_list:
      # Try and see if we have a number here.
      if re.match('[^\d\.]', arg_raw) and '"' not in arg_raw and arg_raw not in ['False','None','True']:
        arg = '"{}"'.format(arg_raw)
      else:
        arg = arg_raw

      arg_new_list.append(arg)

  # Try to run it a number of ways
  baseList =  [ '', 'lib.', 'arduino.', 'db.'] if fn.find('.') == -1 else [ '' ]
  for base in baseList:
    if tryit( "{}{}({})".format(base, fn, ','.join(arg_new_list)) ):
      break

  # if something succeeded then we try to 
  # make heads or tails of it.
  if _succ:
    if type(_last) is str:
      print(_last)
    elif _last:
      if type(_last) is dict:
        for k,v in _last.items():
          if type(v) is bool:
            v = 1 if v else ''
          print("{}='{}';".format(k,v))

      else:
        print(json.dumps(_last))
  else:
    # If we get failure then we should bail.
    dumpfailure()

else:
  print("I need an argument")
  [print(" {}".format(x)) for x in sorted(list(set(dir(lib)) - set(dir())))]
  sys.exit(-1)
